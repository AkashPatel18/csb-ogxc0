{"version":3,"sources":["redux/counter.js","App.js","redux/store.js","index.js"],"names":["counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","App","useSelector","counter","dispatch","useDispatch","className","onClick","store","configureStore","reducer","counterReducer","rootElement","document","getElementById","ReactDOM","render"],"mappings":"oKAMaA,EAAeC,YAAY,CACtCC,KAAM,UACNC,aANmB,CACnBC,MAAO,GAMPC,SAAU,CACRC,UAAW,SAACC,GACVA,EAAMH,OAAS,GAEjBI,UAAW,SAACD,GACVA,EAAMH,OAAS,GAEjBK,kBAAmB,SAACF,EAAOG,GACzBH,EAAMH,OAASM,EAAOC,YAMrB,EAAoDX,EAAaY,QAAzDN,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,kBAEtBT,IAAf,Q,eCnBe,SAASa,IACtB,IAAQT,EAAUU,aAAY,SAACP,GAAD,OAAWA,EAAMQ,WAAvCX,MACFY,EAAWC,cAEjB,OACE,sBAAKC,UAAU,MAAf,UACE,iDAAoBd,KACpB,wBAAQe,QAAS,kBAAMH,EAASV,MAAhC,uBACA,wBAAQa,QAAS,kBAAMH,EAASR,MAAhC,uBACA,wBAAQW,QAAS,kBAAMH,EAASP,EAAkB,MAAlD,0BCZC,IAAMW,EAAQC,YAAe,CAClCC,QAAS,CACPP,QAASQ,KCCPC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAACP,EAAD,MAEFW,K","file":"static/js/main.cdce4d13.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  value: 1\n};\n\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\nexport default counterSlice.reducer;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { increment, decrement, incrementByAmount } from \"./redux/counter\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const { value } = useSelector((state) => state.counter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"App\">\n      <h1>the count is : {value}</h1>\n      <button onClick={() => dispatch(increment())}>increment</button>\n      <button onClick={() => dispatch(decrement())}>decrement</button>\n      <button onClick={() => dispatch(incrementByAmount(33))}>decrement</button>\n    </div>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"./counter\";\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer\n  }\n});\n","import ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}